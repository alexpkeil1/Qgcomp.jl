var documenterSearchIndex = {"docs":
[{"location":"#Index-of-functions","page":"Index of functions","title":"Index of functions","text":"","category":"section"},{"location":"","page":"Index of functions","title":"Index of functions","text":"","category":"page"},{"location":"#Function-help","page":"Index of functions","title":"Function help","text":"","category":"section"},{"location":"#Qgcomp.bootstrap-Union{Tuple{I}, Tuple{T}, Tuple{T, Vector{I}}} where {T<:Random.AbstractRNG, I<:Qgcomp.AbstractID}","page":"Index of functions","title":"Qgcomp.bootstrap","text":"using Qgcomp, Random\nids = [Qgcomp.ID(i) for i in 1:100]\nQgcomp.bootstrap(Xoshiro(), ids)\n\n\n\n\n\n","category":"method"},{"location":"#Qgcomp.breakscore-Tuple{Any, Any}","page":"Index of functions","title":"Qgcomp.breakscore","text":"using Qgcomp\nx = rand(100)\nq=4\nbreaks = Qgcomp.getbreaks(x,q)\nQgcomp.breakscore(x, breaks)\n\n\n\n\n\n","category":"method"},{"location":"#Qgcomp.get_dfq-Tuple{Any, Any, Any}","page":"Index of functions","title":"Qgcomp.get_dfq","text":"expnms = [:x1, :x2, :x3]\nexpnms = [\"x1\", \"x2\", \"x3\"]\ndf = DataFrame(rand(100,3), expnms)\nget_dfq(df, expnms, 4)\nget_dfq(df, expnms, nothing)\n\n\n\n\n\n","category":"method"},{"location":"#Qgcomp.getbreaks-Tuple{Any, Any}","page":"Index of functions","title":"Qgcomp.getbreaks","text":"using Qgcomp\nx = rand(100)\nq=4\nbreaks = Qgcomp.getbreaks(x,q)\n\n\n\n\n\n","category":"method"},{"location":"#Qgcomp.mcsample-Tuple{Any, Any, Any}","page":"Index of functions","title":"Qgcomp.mcsample","text":"if n > length(x), then subsample (without replacement), and otherwise sample with replacement\n\n\n\n\n\n","category":"method"},{"location":"#Qgcomp.qgcomp_cox_noboot-NTuple{4, Any}","page":"Index of functions","title":"Qgcomp.qgcomp_cox_noboot","text":"using Qgcomp\nusing LSurvival, DataFrames, Random\nid, int, out, data = LSurvival.dgm(MersenneTwister(1212), 100, 20);\n\ndata[:, 1] = round.(data[:, 1], digits = 3);\nd, X = data[:, 4], data[:, 1:3];\nwt = ones(length(d)) # random weights just to demonstrate usage\ntab = ( in = int, out = out, d=d, x=X[:,1], z1=X[:,2], z2=X[:,3]) ;\ndf = DataFrame(tab)\n\ncoxph(@formula(Surv(in, out, d)~x+z1+z2), tab, ties = \"efron\", wts = wt) |> display\nqgcomp_cox_noboot(@formula(Surv(in, out, d)~x+z1+z2), df, [\"z1\", \"z2\"], 4) |> display\n\n\n\n\n\n","category":"method"},{"location":"#Qgcomp.qgcomp_glm_boot-NTuple{5, Any}","page":"Index of functions","title":"Qgcomp.qgcomp_glm_boot","text":"using Qgcomp, DataFrames, StatsModels, StatsBase\n\nx1 = rand(100, 3)\nx = rand(100, 3)\nz = rand(100, 3)\nxq, _ = Qgcomp.get_xq(x, 4)\ny = randn(100) + xq * [.1, 0.05, 0]+ (xq .* xq) * [-.1, 0.05, 0]\nybin = Int.(y .> median(y))\ndata = DataFrame(hcat(ybin,y,x,z), [:ybin, :y, :x1, :x2, :x3, :z1, :z2, :z3])\nform = @formula(y~x1+x2+x3+x1^2+x2^2+x3^2+z1+z2+z3)\nformbin = @formula(ybin~x1+x2+x3+x1^2+x2^2+x3^2+z1+z2+z3)\nexpnms = [:x1, :x2, :x3]\n\n# note the top fit is incorrect\nm0 = qgcomp_glm_noboot(form, data, expnms, 4, Normal()) \n\n# three ways to specify non-linear fits\nm = qgcomp_glm_boot(form, data, expnms, 4, Normal(), B=2000, msmformula=@formula(y~mixture+mixture^2)) \nmb = qgcomp_glm_boot(form, data, expnms, 4, Normal(), B=2000, degree=2) \nm2 = qgcomp_glm_ee(form, data, expnms, 4, Normal(), degree=2) \nisfitted(m)\nfitted(m)\naic(m)\naicc(m)\nbic(m)\nloglikelihood(m)\n\n# binary outcome\n# note the top fit is incorrect\nm0 = qgcomp_glm_noboot(formbin, data, expnms, 4, Bernoulli()) \n\n# three ways to specify non-linear fits\nm = qgcomp_glm_boot(formbin, data, expnms, 4, Binomial(), B=2000, msmformula=@formula(y~mixture+mixture^2)) \nmb = qgcomp_glm_boot(formbin, data, expnms, 4, Binomial(), B=2000, degree=2) \nm2 = qgcomp_glm_ee(formbin, data, expnms2, 4, Binomial(), degree=2) \n\n\n\n\n\n\n\n","category":"method"},{"location":"#Qgcomp.qgcomp_glm_ee-NTuple{5, Any}","page":"Index of functions","title":"Qgcomp.qgcomp_glm_ee","text":"binary\n\ndat = DataFrame(y=Int.(rand(Bernoulli(0.25), 50)), x1=rand(50), x2=rand(50), z=rand(50))\n\n# Marginal mixture OR (no confounders)\nft1 = qgcomp_glm_noboot(@formula(y ~ x1 + x2), dat,[\"x1\", \"x2\"], nothing, Binomial())\nft2 = qgcomp_glm_ee(@formula(y ~ x1 + x2), dat,[\"x1\", \"x2\"], nothing, Binomial())\nft3 = qgcomp_glm_ee(@formula(y ~ x1 + x2), dat,[\"x1\", \"x2\"], nothing, Binomial(), rr=true)\n\n# Conditional mixture OR\nqgcomp_glm_noboot(@formula(y ~ z + x1 + x2), dat,[\"x1\", \"x2\"], 4, Binomial())\n# Marginal mixture OR\nqgcomp_glm_ee(@formula(y ~ z + x1 + x2), dat,[\"x1\", \"x2\"], 4, Binomial())\n\n\n\n\n\n","category":"method"},{"location":"#Qgcomp.qgcomp_glm_noboot-NTuple{5, Any}","page":"Index of functions","title":"Qgcomp.qgcomp_glm_noboot","text":"using Qgcomp, DataFrames, StatsModels\n\nx1 = rand(100, 3)\nx = rand(100, 3)\nz = rand(100, 3)\nxq, _ = Qgcomp.get_xq(x, 4)\ny = randn(100) + xq * [.1, 0.05, 0]\ndata = DataFrame(hcat(y,x,z), [:y, :x1, :x2, :x3, :z1, :z2, :z3])\nform = @formula(y~x1+x2+x3+z1+z2+z3)\nexpnms = [:x1, :x2, :x3]\n\nm = qgcomp_glm_noboot(form, data, expnms, 4, Normal())\nfitted(m)\naic(m)\naicc(m)\nbic(m)\nloglikelihood(m)\n\n\n\n\n\n","category":"method"},{"location":"#Qgcomp.quantize-Tuple{Any, Any}","page":"Index of functions","title":"Qgcomp.quantize","text":"x = rand(100, 3)\nq=4\nnexp = size(x,2)\n\n\n\n\n\n","category":"method"},{"location":"#StatsAPI.aic","page":"Index of functions","title":"StatsAPI.aic","text":"aic(m::QGcomp_glm): AIC for underlying fit\n\n\n\n\n\n","category":"function"},{"location":"#StatsAPI.fit!-Tuple{Any, Qgcomp.QGcomp_glm}","page":"Index of functions","title":"StatsAPI.fit!","text":"using Qgcomp, DataFrames, StatsModels\n\nx = rand(100, 3)\nz = rand(100, 3)\nxq, _ = Qgcomp.get_xq(x, 4)\ny = randn(100) + xq * [.1, .05, 0]\ndata = DataFrame(hcat(y,x,z), [:y, :x1, :x2, :x3, :z1, :z2, :z3])\nformula = @formula(y~x1+x2+x3+z1+z2+z3)\nexpnms = [\"x\"*string(i) for i in 1:3]\nm = Qgcomp.QGcomp_glm(formula, data, expnms, 4, Normal())\nm \nfit!(m)\nm \n\n\n\n\n\n","category":"method"},{"location":"#StatsAPI.fit!-Tuple{Qgcomp.QGcomp_ee}","page":"Index of functions","title":"StatsAPI.fit!","text":"n=300\nx = rand(n, 3)\nz = rand(n, 3)\nxq, _ = get_xq(x, 4)\ny = randn(n) + xq * [.1, .05, 0]\ndata = DataFrame(hcat(y,x,z), [:y, :x1, :x2, :x3, :z1, :z2, :z3])\nform = @formula(y~x1+x2+x3+x3+z1+z2+z3)\nform2 = @formula(y~x1+x2+x3+x1^2+x2^2+x3^2+x1*z1+z2+z3)\nexpnms = [:x1, :x2, :x3]\nq = 4\nm = QGcomp_glm(form, data, expnms, 4, Normal());\nfit!(m)\nm2 = QGcomp_ee(form, data, expnms, 4, Normal());\nStatsBase.fit!(m2)\nm = QGcomp_ee(form, data, expnms, q, Normal())\nqgcomp_glm_noboot(form, data, expnms, 4, Normal())\nft = qgcomp_glm_ee(form2, data, expnms, q, Normal(),degree=2)\n\n\n\n\n\n","category":"method"},{"location":"#Implementation-details-and-further-help","page":"Index of functions","title":"Implementation details and further help","text":"","category":"section"},{"location":"","page":"Index of functions","title":"Index of functions","text":"Pages = [\n    ]\n    Depth = 3","category":"page"}]
}
